/*
Render Public API

Manage everything about your Render services

API version: 1.0.0
Contact: support@render.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package render

import (
	"encoding/json"
)

// checks if the EnvVarKeyGenerateValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvVarKeyGenerateValue{}

// EnvVarKeyGenerateValue struct for EnvVarKeyGenerateValue
type EnvVarKeyGenerateValue struct {
	Key string `json:"key"`
	GenerateValue string `json:"generateValue"`
}

// NewEnvVarKeyGenerateValue instantiates a new EnvVarKeyGenerateValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvVarKeyGenerateValue(key string, generateValue string) *EnvVarKeyGenerateValue {
	this := EnvVarKeyGenerateValue{}
	this.Key = key
	this.GenerateValue = generateValue
	return &this
}

// NewEnvVarKeyGenerateValueWithDefaults instantiates a new EnvVarKeyGenerateValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvVarKeyGenerateValueWithDefaults() *EnvVarKeyGenerateValue {
	this := EnvVarKeyGenerateValue{}
	return &this
}

// GetKey returns the Key field value
func (o *EnvVarKeyGenerateValue) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *EnvVarKeyGenerateValue) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *EnvVarKeyGenerateValue) SetKey(v string) {
	o.Key = v
}

// GetGenerateValue returns the GenerateValue field value
func (o *EnvVarKeyGenerateValue) GetGenerateValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GenerateValue
}

// GetGenerateValueOk returns a tuple with the GenerateValue field value
// and a boolean to check if the value has been set.
func (o *EnvVarKeyGenerateValue) GetGenerateValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GenerateValue, true
}

// SetGenerateValue sets field value
func (o *EnvVarKeyGenerateValue) SetGenerateValue(v string) {
	o.GenerateValue = v
}

func (o EnvVarKeyGenerateValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvVarKeyGenerateValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["generateValue"] = o.GenerateValue
	return toSerialize, nil
}

type NullableEnvVarKeyGenerateValue struct {
	value *EnvVarKeyGenerateValue
	isSet bool
}

func (v NullableEnvVarKeyGenerateValue) Get() *EnvVarKeyGenerateValue {
	return v.value
}

func (v *NullableEnvVarKeyGenerateValue) Set(val *EnvVarKeyGenerateValue) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvVarKeyGenerateValue) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvVarKeyGenerateValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvVarKeyGenerateValue(val *EnvVarKeyGenerateValue) *NullableEnvVarKeyGenerateValue {
	return &NullableEnvVarKeyGenerateValue{value: val, isSet: true}
}

func (v NullableEnvVarKeyGenerateValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvVarKeyGenerateValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


