/*
Render Public API

Manage everything about your Render services

API version: 1.0.0
Contact: support@render.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package render

import (
	"encoding/json"
)

// ServicePOST struct for ServicePOST
type ServicePOST struct {
	Type ServiceType `json:"type"`
	Name string `json:"name"`
	OwnerId string `json:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo string `json:"repo"`
	// Defaults to \"yes\"
	AutoDeploy *string `json:"autoDeploy,omitempty"`
	// If left empty, this will fall back to the default branch of the repository
	Branch *string `json:"branch,omitempty"`
	EnvVars []UpdateEnvVarsForServiceRequestInner `json:"envVars,omitempty"`
	SecretFiles []ServicePOSTSecretFilesInner `json:"secretFiles,omitempty"`
	ServiceDetails *ServicePOSTServiceDetails `json:"serviceDetails,omitempty"`
}

// NewServicePOST instantiates a new ServicePOST object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePOST(type_ ServiceType, name string, ownerId string, repo string) *ServicePOST {
	this := ServicePOST{}
	this.Type = type_
	this.Name = name
	this.OwnerId = ownerId
	this.Repo = repo
	var autoDeploy string = "true"
	this.AutoDeploy = &autoDeploy
	return &this
}

// NewServicePOSTWithDefaults instantiates a new ServicePOST object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePOSTWithDefaults() *ServicePOST {
	this := ServicePOST{}
	var autoDeploy string = "true"
	this.AutoDeploy = &autoDeploy
	return &this
}

// GetType returns the Type field value
func (o *ServicePOST) GetType() ServiceType {
	if o == nil {
		var ret ServiceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetTypeOk() (*ServiceType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServicePOST) SetType(v ServiceType) {
	o.Type = v
}

// GetName returns the Name field value
func (o *ServicePOST) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServicePOST) SetName(v string) {
	o.Name = v
}

// GetOwnerId returns the OwnerId field value
func (o *ServicePOST) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetOwnerIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *ServicePOST) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetRepo returns the Repo field value
func (o *ServicePOST) GetRepo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Repo
}

// GetRepoOk returns a tuple with the Repo field value
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetRepoOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Repo, true
}

// SetRepo sets field value
func (o *ServicePOST) SetRepo(v string) {
	o.Repo = v
}

// GetAutoDeploy returns the AutoDeploy field value if set, zero value otherwise.
func (o *ServicePOST) GetAutoDeploy() string {
	if o == nil || isNil(o.AutoDeploy) {
		var ret string
		return ret
	}
	return *o.AutoDeploy
}

// GetAutoDeployOk returns a tuple with the AutoDeploy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetAutoDeployOk() (*string, bool) {
	if o == nil || isNil(o.AutoDeploy) {
    return nil, false
	}
	return o.AutoDeploy, true
}

// HasAutoDeploy returns a boolean if a field has been set.
func (o *ServicePOST) HasAutoDeploy() bool {
	if o != nil && !isNil(o.AutoDeploy) {
		return true
	}

	return false
}

// SetAutoDeploy gets a reference to the given string and assigns it to the AutoDeploy field.
func (o *ServicePOST) SetAutoDeploy(v string) {
	o.AutoDeploy = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *ServicePOST) GetBranch() string {
	if o == nil || isNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetBranchOk() (*string, bool) {
	if o == nil || isNil(o.Branch) {
    return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *ServicePOST) HasBranch() bool {
	if o != nil && !isNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *ServicePOST) SetBranch(v string) {
	o.Branch = &v
}

// GetEnvVars returns the EnvVars field value if set, zero value otherwise.
func (o *ServicePOST) GetEnvVars() []UpdateEnvVarsForServiceRequestInner {
	if o == nil || isNil(o.EnvVars) {
		var ret []UpdateEnvVarsForServiceRequestInner
		return ret
	}
	return o.EnvVars
}

// GetEnvVarsOk returns a tuple with the EnvVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetEnvVarsOk() ([]UpdateEnvVarsForServiceRequestInner, bool) {
	if o == nil || isNil(o.EnvVars) {
    return nil, false
	}
	return o.EnvVars, true
}

// HasEnvVars returns a boolean if a field has been set.
func (o *ServicePOST) HasEnvVars() bool {
	if o != nil && !isNil(o.EnvVars) {
		return true
	}

	return false
}

// SetEnvVars gets a reference to the given []UpdateEnvVarsForServiceRequestInner and assigns it to the EnvVars field.
func (o *ServicePOST) SetEnvVars(v []UpdateEnvVarsForServiceRequestInner) {
	o.EnvVars = v
}

// GetSecretFiles returns the SecretFiles field value if set, zero value otherwise.
func (o *ServicePOST) GetSecretFiles() []ServicePOSTSecretFilesInner {
	if o == nil || isNil(o.SecretFiles) {
		var ret []ServicePOSTSecretFilesInner
		return ret
	}
	return o.SecretFiles
}

// GetSecretFilesOk returns a tuple with the SecretFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetSecretFilesOk() ([]ServicePOSTSecretFilesInner, bool) {
	if o == nil || isNil(o.SecretFiles) {
    return nil, false
	}
	return o.SecretFiles, true
}

// HasSecretFiles returns a boolean if a field has been set.
func (o *ServicePOST) HasSecretFiles() bool {
	if o != nil && !isNil(o.SecretFiles) {
		return true
	}

	return false
}

// SetSecretFiles gets a reference to the given []ServicePOSTSecretFilesInner and assigns it to the SecretFiles field.
func (o *ServicePOST) SetSecretFiles(v []ServicePOSTSecretFilesInner) {
	o.SecretFiles = v
}

// GetServiceDetails returns the ServiceDetails field value if set, zero value otherwise.
func (o *ServicePOST) GetServiceDetails() ServicePOSTServiceDetails {
	if o == nil || isNil(o.ServiceDetails) {
		var ret ServicePOSTServiceDetails
		return ret
	}
	return *o.ServiceDetails
}

// GetServiceDetailsOk returns a tuple with the ServiceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePOST) GetServiceDetailsOk() (*ServicePOSTServiceDetails, bool) {
	if o == nil || isNil(o.ServiceDetails) {
    return nil, false
	}
	return o.ServiceDetails, true
}

// HasServiceDetails returns a boolean if a field has been set.
func (o *ServicePOST) HasServiceDetails() bool {
	if o != nil && !isNil(o.ServiceDetails) {
		return true
	}

	return false
}

// SetServiceDetails gets a reference to the given ServicePOSTServiceDetails and assigns it to the ServiceDetails field.
func (o *ServicePOST) SetServiceDetails(v ServicePOSTServiceDetails) {
	o.ServiceDetails = &v
}

func (o ServicePOST) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["ownerId"] = o.OwnerId
	}
	if true {
		toSerialize["repo"] = o.Repo
	}
	if !isNil(o.AutoDeploy) {
		toSerialize["autoDeploy"] = o.AutoDeploy
	}
	if !isNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !isNil(o.EnvVars) {
		toSerialize["envVars"] = o.EnvVars
	}
	if !isNil(o.SecretFiles) {
		toSerialize["secretFiles"] = o.SecretFiles
	}
	if !isNil(o.ServiceDetails) {
		toSerialize["serviceDetails"] = o.ServiceDetails
	}
	return json.Marshal(toSerialize)
}

type NullableServicePOST struct {
	value *ServicePOST
	isSet bool
}

func (v NullableServicePOST) Get() *ServicePOST {
	return v.value
}

func (v *NullableServicePOST) Set(val *ServicePOST) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePOST) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePOST) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePOST(val *ServicePOST) *NullableServicePOST {
	return &NullableServicePOST{value: val, isSet: true}
}

func (v NullableServicePOST) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePOST) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


