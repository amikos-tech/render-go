/*
Render Public API

Manage everything about your Render services

API version: 1.0.0
Contact: support@render.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package render

import (
	"encoding/json"
	"time"
)

// checks if the CronJobDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CronJobDetails{}

// CronJobDetails struct for CronJobDetails
type CronJobDetails struct {
	Env *ServiceEnv `json:"env,omitempty"`
	EnvSpecificDetails *WebServiceDetailsEnvSpecificDetails `json:"envSpecificDetails,omitempty"`
	LastSuccessfulRunAt *time.Time `json:"lastSuccessfulRunAt,omitempty"`
	Plan *string `json:"plan,omitempty"`
	Region *Region `json:"region,omitempty"`
	Schedule *string `json:"schedule,omitempty"`
}

// NewCronJobDetails instantiates a new CronJobDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCronJobDetails() *CronJobDetails {
	this := CronJobDetails{}
	return &this
}

// NewCronJobDetailsWithDefaults instantiates a new CronJobDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCronJobDetailsWithDefaults() *CronJobDetails {
	this := CronJobDetails{}
	return &this
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *CronJobDetails) GetEnv() ServiceEnv {
	if o == nil || isNil(o.Env) {
		var ret ServiceEnv
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetails) GetEnvOk() (*ServiceEnv, bool) {
	if o == nil || isNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *CronJobDetails) HasEnv() bool {
	if o != nil && !isNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given ServiceEnv and assigns it to the Env field.
func (o *CronJobDetails) SetEnv(v ServiceEnv) {
	o.Env = &v
}

// GetEnvSpecificDetails returns the EnvSpecificDetails field value if set, zero value otherwise.
func (o *CronJobDetails) GetEnvSpecificDetails() WebServiceDetailsEnvSpecificDetails {
	if o == nil || isNil(o.EnvSpecificDetails) {
		var ret WebServiceDetailsEnvSpecificDetails
		return ret
	}
	return *o.EnvSpecificDetails
}

// GetEnvSpecificDetailsOk returns a tuple with the EnvSpecificDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetails) GetEnvSpecificDetailsOk() (*WebServiceDetailsEnvSpecificDetails, bool) {
	if o == nil || isNil(o.EnvSpecificDetails) {
		return nil, false
	}
	return o.EnvSpecificDetails, true
}

// HasEnvSpecificDetails returns a boolean if a field has been set.
func (o *CronJobDetails) HasEnvSpecificDetails() bool {
	if o != nil && !isNil(o.EnvSpecificDetails) {
		return true
	}

	return false
}

// SetEnvSpecificDetails gets a reference to the given WebServiceDetailsEnvSpecificDetails and assigns it to the EnvSpecificDetails field.
func (o *CronJobDetails) SetEnvSpecificDetails(v WebServiceDetailsEnvSpecificDetails) {
	o.EnvSpecificDetails = &v
}

// GetLastSuccessfulRunAt returns the LastSuccessfulRunAt field value if set, zero value otherwise.
func (o *CronJobDetails) GetLastSuccessfulRunAt() time.Time {
	if o == nil || isNil(o.LastSuccessfulRunAt) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulRunAt
}

// GetLastSuccessfulRunAtOk returns a tuple with the LastSuccessfulRunAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetails) GetLastSuccessfulRunAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastSuccessfulRunAt) {
		return nil, false
	}
	return o.LastSuccessfulRunAt, true
}

// HasLastSuccessfulRunAt returns a boolean if a field has been set.
func (o *CronJobDetails) HasLastSuccessfulRunAt() bool {
	if o != nil && !isNil(o.LastSuccessfulRunAt) {
		return true
	}

	return false
}

// SetLastSuccessfulRunAt gets a reference to the given time.Time and assigns it to the LastSuccessfulRunAt field.
func (o *CronJobDetails) SetLastSuccessfulRunAt(v time.Time) {
	o.LastSuccessfulRunAt = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *CronJobDetails) GetPlan() string {
	if o == nil || isNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetails) GetPlanOk() (*string, bool) {
	if o == nil || isNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *CronJobDetails) HasPlan() bool {
	if o != nil && !isNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *CronJobDetails) SetPlan(v string) {
	o.Plan = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CronJobDetails) GetRegion() Region {
	if o == nil || isNil(o.Region) {
		var ret Region
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetails) GetRegionOk() (*Region, bool) {
	if o == nil || isNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CronJobDetails) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given Region and assigns it to the Region field.
func (o *CronJobDetails) SetRegion(v Region) {
	o.Region = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *CronJobDetails) GetSchedule() string {
	if o == nil || isNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetails) GetScheduleOk() (*string, bool) {
	if o == nil || isNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *CronJobDetails) HasSchedule() bool {
	if o != nil && !isNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *CronJobDetails) SetSchedule(v string) {
	o.Schedule = &v
}

func (o CronJobDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CronJobDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !isNil(o.EnvSpecificDetails) {
		toSerialize["envSpecificDetails"] = o.EnvSpecificDetails
	}
	if !isNil(o.LastSuccessfulRunAt) {
		toSerialize["lastSuccessfulRunAt"] = o.LastSuccessfulRunAt
	}
	if !isNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !isNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	return toSerialize, nil
}

type NullableCronJobDetails struct {
	value *CronJobDetails
	isSet bool
}

func (v NullableCronJobDetails) Get() *CronJobDetails {
	return v.value
}

func (v *NullableCronJobDetails) Set(val *CronJobDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCronJobDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCronJobDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCronJobDetails(val *CronJobDetails) *NullableCronJobDetails {
	return &NullableCronJobDetails{value: val, isSet: true}
}

func (v NullableCronJobDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCronJobDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


