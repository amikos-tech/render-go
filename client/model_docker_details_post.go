/*
Render Public API

Manage everything about your Render services

API version: 1.0.0
Contact: support@render.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package render

import (
	"encoding/json"
)

// DockerDetailsPOST struct for DockerDetailsPOST
type DockerDetailsPOST struct {
	DockerCommand *string `json:"dockerCommand,omitempty"`
	DockerContext *string `json:"dockerContext,omitempty"`
	// Defaults to \"./Dockerfile\"
	DockerfilePath *string `json:"dockerfilePath,omitempty"`
}

// NewDockerDetailsPOST instantiates a new DockerDetailsPOST object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDockerDetailsPOST() *DockerDetailsPOST {
	this := DockerDetailsPOST{}
	var dockerfilePath string = "./Dockerfile"
	this.DockerfilePath = &dockerfilePath
	return &this
}

// NewDockerDetailsPOSTWithDefaults instantiates a new DockerDetailsPOST object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerDetailsPOSTWithDefaults() *DockerDetailsPOST {
	this := DockerDetailsPOST{}
	var dockerfilePath string = "./Dockerfile"
	this.DockerfilePath = &dockerfilePath
	return &this
}

// GetDockerCommand returns the DockerCommand field value if set, zero value otherwise.
func (o *DockerDetailsPOST) GetDockerCommand() string {
	if o == nil || isNil(o.DockerCommand) {
		var ret string
		return ret
	}
	return *o.DockerCommand
}

// GetDockerCommandOk returns a tuple with the DockerCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerDetailsPOST) GetDockerCommandOk() (*string, bool) {
	if o == nil || isNil(o.DockerCommand) {
    return nil, false
	}
	return o.DockerCommand, true
}

// HasDockerCommand returns a boolean if a field has been set.
func (o *DockerDetailsPOST) HasDockerCommand() bool {
	if o != nil && !isNil(o.DockerCommand) {
		return true
	}

	return false
}

// SetDockerCommand gets a reference to the given string and assigns it to the DockerCommand field.
func (o *DockerDetailsPOST) SetDockerCommand(v string) {
	o.DockerCommand = &v
}

// GetDockerContext returns the DockerContext field value if set, zero value otherwise.
func (o *DockerDetailsPOST) GetDockerContext() string {
	if o == nil || isNil(o.DockerContext) {
		var ret string
		return ret
	}
	return *o.DockerContext
}

// GetDockerContextOk returns a tuple with the DockerContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerDetailsPOST) GetDockerContextOk() (*string, bool) {
	if o == nil || isNil(o.DockerContext) {
    return nil, false
	}
	return o.DockerContext, true
}

// HasDockerContext returns a boolean if a field has been set.
func (o *DockerDetailsPOST) HasDockerContext() bool {
	if o != nil && !isNil(o.DockerContext) {
		return true
	}

	return false
}

// SetDockerContext gets a reference to the given string and assigns it to the DockerContext field.
func (o *DockerDetailsPOST) SetDockerContext(v string) {
	o.DockerContext = &v
}

// GetDockerfilePath returns the DockerfilePath field value if set, zero value otherwise.
func (o *DockerDetailsPOST) GetDockerfilePath() string {
	if o == nil || isNil(o.DockerfilePath) {
		var ret string
		return ret
	}
	return *o.DockerfilePath
}

// GetDockerfilePathOk returns a tuple with the DockerfilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerDetailsPOST) GetDockerfilePathOk() (*string, bool) {
	if o == nil || isNil(o.DockerfilePath) {
    return nil, false
	}
	return o.DockerfilePath, true
}

// HasDockerfilePath returns a boolean if a field has been set.
func (o *DockerDetailsPOST) HasDockerfilePath() bool {
	if o != nil && !isNil(o.DockerfilePath) {
		return true
	}

	return false
}

// SetDockerfilePath gets a reference to the given string and assigns it to the DockerfilePath field.
func (o *DockerDetailsPOST) SetDockerfilePath(v string) {
	o.DockerfilePath = &v
}

func (o DockerDetailsPOST) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DockerCommand) {
		toSerialize["dockerCommand"] = o.DockerCommand
	}
	if !isNil(o.DockerContext) {
		toSerialize["dockerContext"] = o.DockerContext
	}
	if !isNil(o.DockerfilePath) {
		toSerialize["dockerfilePath"] = o.DockerfilePath
	}
	return json.Marshal(toSerialize)
}

type NullableDockerDetailsPOST struct {
	value *DockerDetailsPOST
	isSet bool
}

func (v NullableDockerDetailsPOST) Get() *DockerDetailsPOST {
	return v.value
}

func (v *NullableDockerDetailsPOST) Set(val *DockerDetailsPOST) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerDetailsPOST) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerDetailsPOST) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerDetailsPOST(val *DockerDetailsPOST) *NullableDockerDetailsPOST {
	return &NullableDockerDetailsPOST{value: val, isSet: true}
}

func (v NullableDockerDetailsPOST) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerDetailsPOST) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


