openapi: 3.0.2
info:
  contact:
    email: support@render.com
    name: Render API
    url: https://render.com/chat
  description: Manage everything about your Render services
  title: Render Public API
  version: 1.0.0
servers:
- url: https://api.render.com/v1
security:
- BearerAuth: []
tags:
- name: Custom Domains
- name: Deploys
- name: Jobs
- description: The `Owners` endpoints supply more information about the users and
    teams that your API key has access to.
  name: Owners
- name: Services
paths:
  /owners:
    get:
      operationId: get-owners
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: email
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Cursor to begin retrieving entries for this query
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: Max number of items that can be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Defaults to 20
          maximum: 100
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_owners_200_response_inner'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: List authorized users and teams
      tags:
      - Owners
  /owners/{ownerId}:
    get:
      operationId: get-owner
      parameters:
      - description: The ID of the user or team
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/owner'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Retrieve user or team
      tags:
      - Owners
  /services:
    get:
      operationId: get-services
      parameters:
      - description: Filter for the names of services
        explode: false
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter for types of services
        explode: false
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/serviceType'
          type: array
        style: form
      - description: Filter for environments of services
        explode: false
        in: query
        name: env
        required: false
        schema:
          items:
            $ref: '#/components/schemas/serviceEnv'
          type: array
        style: form
      - description: Filter for regions of services
        explode: false
        in: query
        name: region
        required: false
        schema:
          items:
            $ref: '#/components/schemas/region'
          type: array
        style: form
      - description: Filter services based on whether they're suspended or not suspended
        explode: false
        in: query
        name: suspended
        required: false
        schema:
          items:
            enum:
            - suspended
            - not_suspended
            type: string
          type: array
        style: form
      - description: Filter for services created before a certain time (specified
          as an ISO 8601 timestamp)
        example: 2021-06-17T08:15:30Z
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for services created after a certain time (specified as
          an ISO 8601 timestamp)
        example: 2021-02-17T08:15:30Z
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for services updated before a certain time (specified
          as an ISO 8601 timestamp)
        example: 2021-06-17T08:15:30Z
        explode: true
        in: query
        name: updatedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for services updated after a certain time (specified as
          an ISO 8601 timestamp)
        example: 2021-02-17T08:15:30Z
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The ID of the owner (team or personal user) whose resources should
          be returned
        explode: false
        in: query
        name: ownerId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Cursor to begin retrieving entries for this query
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: Max number of items that can be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Defaults to 20
          maximum: 100
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_services_200_response_inner'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: List services
      tags:
      - Services
    post:
      operationId: create-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicePOST'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_service_201_response'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You must enter payment information to perform this request.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The current state of the resource conflicts with this request.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Create service
      tags:
      - Services
  /services/{serviceId}:
    delete:
      operationId: delete-service
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Service deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Delete service
      tags:
      - Services
    get:
      operationId: get-service
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Retrieve service
      tags:
      - Services
    patch:
      operationId: update-service
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicePATCH'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You must enter payment information to perform this request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The current state of the resource conflicts with this request.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Update service
      tags:
      - Services
  /services/{serviceId}/deploys:
    get:
      operationId: get-deploys
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: Epoch/Unix timestamp of start of time range to return
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          type: integer
        style: form
      - description: Epoch/Unix timestamp of end of time range to return
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          type: integer
        style: form
      - description: Cursor to begin retrieving entries for this query
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: Max number of items that can be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Defaults to 20
          maximum: 100
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_deploys_200_response_inner'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: List deploys
      tags:
      - Deploys
    post:
      operationId: create-deploy
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_deploy_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The current state of the resource conflicts with this request.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Trigger a deploy
      tags:
      - Deploys
  /services/{serviceId}/deploys/{deployId}:
    get:
      operationId: get-deploy
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the deploy
        explode: false
        in: path
        name: deployId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Retrieve deploy
      tags:
      - Deploys
  /services/{serviceId}/env-vars:
    get:
      operationId: get-env-vars-for-service
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: Cursor to begin retrieving entries for this query
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: Max number of items that can be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Defaults to 20
          maximum: 100
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_env_vars_for_service_200_response_inner'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Retrieve environment variables
      tags:
      - Services
    put:
      operationId: update-env-vars-for-service
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/update_env_vars_for_service_request_inner'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_env_vars_for_service_200_response_inner'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Update environment variables
      tags:
      - Services
  /services/{serviceId}/headers:
    get:
      operationId: get-headers
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter for specific paths that headers apply to
        explode: false
        in: query
        name: path
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter for header names
        explode: false
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter for header values
        explode: false
        in: query
        name: value
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Cursor to begin retrieving entries for this query
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: Max number of items that can be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Defaults to 20
          maximum: 100
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_headers_200_response_inner'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Retrieve headers
      tags:
      - Services
  /services/{serviceId}/routes:
    get:
      operationId: get-routes
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter for the type of route rule
        explode: false
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - redirect
            - rewrite
            type: string
          type: array
        style: form
      - description: Filter for the source path of the route
        explode: false
        in: query
        name: source
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter for the destination path of the route
        explode: false
        in: query
        name: destination
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Cursor to begin retrieving entries for this query
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: Max number of items that can be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Defaults to 20
          maximum: 100
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_routes_200_response_inner'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Retrieve redirect and rewrite rules
      tags:
      - Services
  /services/{serviceId}/custom-domains:
    get:
      operationId: get-custom-domains
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: Cursor to begin retrieving entries for this query
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: Max number of items that can be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Defaults to 20
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: Filter for the names of custom domain
        explode: false
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter for apex or subdomains
        explode: true
        in: query
        name: domainType
        required: false
        schema:
          enum:
          - apex
          - subdomain
          type: string
        style: form
      - description: Filter for verified or unverified custom domains
        explode: true
        in: query
        name: verificationStatus
        required: false
        schema:
          enum:
          - verified
          - unverified
          type: string
        style: form
      - description: Filter for custom domains created before a certain time (specified
          as an ISO 8601 timestamp)
        example: 2021-06-17T08:15:30Z
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for custom domains created after a certain time (specified
          as an ISO 8601 timestamp)
        example: 2021-02-17T08:15:30Z
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_custom_domains_200_response_inner'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: List custom domains
      tags:
      - Custom Domains
    post:
      operationId: create-custom-domain
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_custom_domain_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/customDomain'
                type: array
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You must enter payment information to perform this request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The current state of the resource conflicts with this request.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Add custom domain
      tags:
      - Custom Domains
  /services/{serviceId}/custom-domains/{customDomainIdOrName}:
    delete:
      operationId: delete-custom-domain
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID or name of the custom domain
        explode: false
        in: path
        name: customDomainIdOrName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Custom domain deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Delete custom domain
      tags:
      - Custom Domains
    get:
      operationId: get-custom-domain
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID or name of the custom domain
        explode: false
        in: path
        name: customDomainIdOrName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customDomain'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Retrieve custom domain
      tags:
      - Custom Domains
  /services/{serviceId}/custom-domains/{customDomainIdOrName}/verify:
    post:
      operationId: refresh-custom-domain
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID or name of the custom domain
        explode: false
        in: path
        name: customDomainIdOrName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Custom domain verification triggered
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Verify DNS configuration
      tags:
      - Custom Domains
  /services/{serviceId}/suspend:
    post:
      operationId: suspend-service
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Service suspended successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Suspend service
      tags:
      - Services
  /services/{serviceId}/resume:
    post:
      operationId: resume-service
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Service resumed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Resume service
      tags:
      - Services
  /services/{serviceId}/scale:
    post:
      operationId: scale-service
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scale_service_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: You do not have permissions for the requested resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to generate preferred media types as specified by Accept
            request header.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource is no longer available.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Scale service to desired number of instances
      tags:
      - Services
  /services/{serviceId}/jobs:
    get:
      operationId: list-job
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: Cursor to begin retrieving entries for this query
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: Max number of items that can be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Defaults to 20
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: "Filter for the status of the job (`pending`, `running`, `succeeded`,\
          \ or `failed`)"
        explode: false
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - pending
            - running
            - succeeded
            - failed
            type: string
          type: array
        style: form
      - description: Filter for jobs created before a certain time (specified as an
          ISO 8601 timestamp)
        example: 2021-06-17T08:15:30Z
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for jobs created after a certain time (specified as an
          ISO 8601 timestamp)
        example: 2021-02-17T08:15:30Z
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for jobs started before a certain time (specified as an
          ISO 8601 timestamp)
        example: 2021-06-17T08:15:30Z
        explode: true
        in: query
        name: startedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for jobs started after a certain time (specified as an
          ISO 8601 timestamp)
        example: 2021-02-17T08:15:30Z
        explode: true
        in: query
        name: startedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for jobs finished before a certain time (specified as
          an ISO 8601 timestamp)
        example: 2021-06-17T08:15:30Z
        explode: true
        in: query
        name: finishedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter for jobs finished after a certain time (specified as an
          ISO 8601 timestamp)
        example: 2021-02-17T08:15:30Z
        explode: true
        in: query
        name: finishedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/list_job_200_response_inner'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: List jobs
      tags:
      - Jobs
    post:
      operationId: post-job
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_job_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Create job
      tags:
      - Jobs
  /services/{serviceId}/jobs/{jobId}:
    get:
      operationId: get-job
      parameters:
      - description: The ID of the service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the job
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The request could not be understood by the server.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unable to find the requested resource.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Rate limit has been surpassed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An unexpected server error has occurred.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Server currently unavailable.
      summary: Retrieve job
      tags:
      - Jobs
components:
  headers:
    RateLimitRemaining:
      description: The number of requests left for this time period.
      explode: false
      schema:
        type: integer
      style: simple
  parameters:
    cursorParam:
      description: Cursor to begin retrieving entries for this query
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        format: byte
        type: string
      style: form
    customDomainIdOrNameParam:
      description: The ID or name of the custom domain
      explode: false
      in: path
      name: customDomainIdOrName
      required: true
      schema:
        type: string
      style: simple
    deployIdParam:
      description: The ID of the deploy
      explode: false
      in: path
      name: deployId
      required: true
      schema:
        type: string
      style: simple
    limitParam:
      description: Max number of items that can be returned
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 20
        description: Defaults to 20
        maximum: 100
        minimum: 1
        type: number
      style: form
    ownerIdParam:
      description: The ID of the owner (team or personal user) whose resources should
        be returned
      explode: false
      in: query
      name: ownerId
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    serviceIdParam:
      description: The ID of the service
      explode: false
      in: path
      name: serviceId
      required: true
      schema:
        type: string
      style: simple
    startTimeParam:
      description: Epoch/Unix timestamp of start of time range to return
      explode: true
      in: query
      name: startTime
      required: false
      schema:
        type: integer
      style: form
    endTimeParam:
      description: Epoch/Unix timestamp of end of time range to return
      explode: true
      in: query
      name: endTime
      required: false
      schema:
        type: integer
      style: form
  responses:
    "400BadRequest":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: The request could not be understood by the server.
    "401Unauthorized":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: Authorization information is missing or invalid.
    "402PaymentRequired":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: You must enter payment information to perform this request.
    "403Forbidden":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: You do not have permissions for the requested resource.
    "404NotFound":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: Unable to find the requested resource.
    "406NotAcceptable":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: Unable to generate preferred media types as specified by Accept
        request header.
    "409Conflict":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: The current state of the resource conflicts with this request.
    "410Gone":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: The requested resource is no longer available.
    "429RateLimit":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: Rate limit has been surpassed.
    "500InternalServerError":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: An unexpected server error has occurred.
    "503ServiceUnavailable":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: Server currently unavailable.
  schemas:
    service:
      example:
        repo: https://github.com/render-examples/flask-hello-world
        ownerId: ownerId
        type: null
        branch: branch
        suspended: suspended
        createdAt: 2000-01-23T04:56:07.000+00:00
        autoDeploy: "true"
        suspenders:
        - null
        - null
        name: name
        notifyOnFail: null
        serviceDetails: null
        id: id
        slug: slug
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        autoDeploy:
          enum:
          - "true"
          - "false"
          type: string
        branch:
          type: string
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        notifyOnFail:
          $ref: '#/components/schemas/notifySetting'
        ownerId:
          type: string
        repo:
          example: https://github.com/render-examples/flask-hello-world
          type: string
        slug:
          type: string
        suspended:
          enum:
          - suspended
          - not_suspended
          type: string
        suspenders:
          items:
            $ref: '#/components/schemas/suspenderType'
          type: array
        type:
          $ref: '#/components/schemas/serviceType'
        updatedAt:
          format: date-time
          type: string
        serviceDetails:
          $ref: '#/components/schemas/service_serviceDetails'
      type: object
    dockerDetails:
      properties:
        dockerCommand:
          type: string
        dockerContext:
          type: string
        dockerfilePath:
          type: string
      type: object
    nativeEnvironmentDetails:
      properties:
        buildCommand:
          type: string
        startCommand:
          type: string
      type: object
    staticSiteDetails:
      properties:
        buildCommand:
          type: string
        parentServer:
          $ref: '#/components/schemas/staticSiteDetails_parentServer'
        publishPath:
          type: string
        pullRequestPreviewsEnabled:
          enum:
          - "true"
          - "false"
          type: string
        url:
          type: string
      type: object
    webServiceDetails:
      properties:
        disk:
          $ref: '#/components/schemas/staticSiteDetails_parentServer'
        env:
          $ref: '#/components/schemas/serviceEnv'
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetails_envSpecificDetails'
        healthCheckPath:
          type: string
        numInstances:
          type: integer
        openPorts:
          items:
            $ref: '#/components/schemas/serverPort'
          type: array
        parentServer:
          $ref: '#/components/schemas/staticSiteDetails_parentServer'
        plan:
          type: string
        pullRequestPreviewsEnabled:
          enum:
          - "true"
          - "false"
          type: string
        region:
          $ref: '#/components/schemas/region'
        url:
          type: string
      type: object
    privateServiceDetails:
      properties:
        disk:
          $ref: '#/components/schemas/staticSiteDetails_parentServer'
        env:
          $ref: '#/components/schemas/serviceEnv'
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetails_envSpecificDetails'
        numInstances:
          type: integer
        openPorts:
          items:
            $ref: '#/components/schemas/serverPort'
          type: array
        parentServer:
          $ref: '#/components/schemas/staticSiteDetails_parentServer'
        plan:
          type: string
        pullRequestPreviewsEnabled:
          enum:
          - "true"
          - "false"
          type: string
        region:
          $ref: '#/components/schemas/region'
        url:
          type: string
      type: object
    backgroundWorkerDetails:
      properties:
        disk:
          $ref: '#/components/schemas/staticSiteDetails_parentServer'
        env:
          $ref: '#/components/schemas/serviceEnv'
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetails_envSpecificDetails'
        numInstances:
          type: integer
        parentServer:
          $ref: '#/components/schemas/staticSiteDetails_parentServer'
        plan:
          type: string
        pullRequestPreviewsEnabled:
          enum:
          - "true"
          - "false"
          type: string
        region:
          $ref: '#/components/schemas/region'
      type: object
    cronJobDetails:
      properties:
        env:
          $ref: '#/components/schemas/serviceEnv'
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetails_envSpecificDetails'
        lastSuccessfulRunAt:
          format: date-time
          type: string
        plan:
          type: string
        region:
          $ref: '#/components/schemas/region'
        schedule:
          type: string
      type: object
    servicePOST:
      properties:
        type:
          $ref: '#/components/schemas/serviceType'
        name:
          type: string
        ownerId:
          type: string
        repo:
          description: Do not include the branch in the repo string. You can instead
            supply a 'branch' parameter.
          example: https://github.com/render-examples/flask-hello-world
          type: string
        autoDeploy:
          default: "true"
          description: Defaults to "yes"
          enum:
          - "true"
          - "false"
          type: string
        branch:
          description: "If left empty, this will fall back to the default branch of\
            \ the repository"
          type: string
        envVars:
          items:
            $ref: '#/components/schemas/update_env_vars_for_service_request_inner'
          type: array
        secretFiles:
          items:
            $ref: '#/components/schemas/servicePOST_secretFiles_inner'
          type: array
        serviceDetails:
          $ref: '#/components/schemas/servicePOST_serviceDetails'
      required:
      - name
      - ownerId
      - repo
      - type
      type: object
    dockerDetailsPOST:
      properties:
        dockerCommand:
          type: string
        dockerContext:
          type: string
        dockerfilePath:
          default: ./Dockerfile
          description: Defaults to "./Dockerfile"
          type: string
      type: object
    nativeEnvironmentDetailsPOST:
      properties:
        buildCommand:
          type: string
        startCommand:
          type: string
      required:
      - buildCommand
      - startCommand
      type: object
    staticSiteDetailsPOST:
      properties:
        buildCommand:
          type: string
        headers:
          items:
            $ref: '#/components/schemas/header'
          type: array
        publishPath:
          default: public
          description: Defaults to "public"
          type: string
        pullRequestPreviewsEnabled:
          default: "false"
          description: Defaults to "no"
          enum:
          - "true"
          - "false"
          type: string
        routes:
          items:
            $ref: '#/components/schemas/route'
          type: array
      type: object
    webServiceDetailsPOST:
      properties:
        disk:
          $ref: '#/components/schemas/webServiceDetailsPOST_disk'
        env:
          $ref: '#/components/schemas/serviceEnv'
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetailsPOST_envSpecificDetails'
        healthCheckPath:
          type: string
        numInstances:
          default: 1
          description: Defaults to 1
          minimum: 1
          type: integer
        plan:
          default: starter
          description: Defaults to "starter"
          enum:
          - starter
          - starter_plus
          - standard
          - standard_plus
          - pro
          - pro_plus
          type: string
        pullRequestPreviewsEnabled:
          default: "no"
          description: Defaults to "no"
          enum:
          - "true"
          - "false"
          type: string
        region:
          $ref: '#/components/schemas/region'
      required:
      - env
      type: object
    privateServiceDetailsPOST:
      properties:
        disk:
          $ref: '#/components/schemas/webServiceDetailsPOST_disk'
        env:
          $ref: '#/components/schemas/serviceEnv'
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetailsPOST_envSpecificDetails'
        numInstances:
          default: 1
          description: Defaults to 1
          minimum: 1
          type: integer
        plan:
          default: starter
          description: Defaults to "starter"
          enum:
          - starter
          - starter_plus
          - standard
          - standard_plus
          - pro
          - pro_plus
          type: string
        pullRequestPreviewsEnabled:
          default: "no"
          description: Defaults to "no"
          enum:
          - "true"
          - "false"
          type: string
        region:
          $ref: '#/components/schemas/region'
      required:
      - env
      type: object
    backgroundWorkerDetailsPOST:
      properties:
        disk:
          $ref: '#/components/schemas/webServiceDetailsPOST_disk'
        env:
          $ref: '#/components/schemas/serviceEnv'
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetailsPOST_envSpecificDetails'
        numInstances:
          default: 1
          description: Defaults to 1
          minimum: 1
          type: integer
        plan:
          default: starter
          description: Defaults to "starter"
          enum:
          - starter
          - starter_plus
          - standard
          - standard_plus
          - pro
          - pro_plus
          type: string
        pullRequestPreviewsEnabled:
          default: "no"
          description: Defaults to "no"
          enum:
          - "true"
          - "false"
          type: string
        region:
          $ref: '#/components/schemas/region'
      required:
      - env
      type: object
    cronJobDetailsPOST:
      properties:
        env:
          $ref: '#/components/schemas/serviceEnv'
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetailsPOST_envSpecificDetails'
        plan:
          default: starter
          description: Defaults to "starter"
          enum:
          - starter
          - starter_plus
          - standard
          - standard_plus
          - pro
          - pro_plus
          type: string
        region:
          $ref: '#/components/schemas/region'
        schedule:
          type: string
      required:
      - env
      - schedule
      type: object
    servicePATCH:
      properties:
        autoDeploy:
          enum:
          - "true"
          - "false"
          type: string
        branch:
          type: string
        name:
          type: string
        serviceDetails:
          $ref: '#/components/schemas/servicePATCH_serviceDetails'
      type: object
    dockerDetailsPATCH:
      properties:
        dockerCommand:
          type: string
        dockerContext:
          type: string
        dockerfilePath:
          type: string
      type: object
    nativeEnvironmentDetailsPATCH:
      properties:
        buildCommand:
          type: string
        startCommand:
          type: string
      type: object
    staticSiteDetailsPATCH:
      properties:
        buildCommand:
          type: string
        publishPath:
          type: string
        pullRequestPreviewsEnabled:
          enum:
          - "true"
          - "false"
          type: string
      type: object
    webServiceDetailsPATCH:
      properties:
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetailsPATCH_envSpecificDetails'
        healthCheckPath:
          type: string
        numInstances:
          type: integer
        plan:
          enum:
          - starter
          - starter_plus
          - standard
          - standard_plus
          - pro
          - pro_plus
          type: string
        pullRequestPreviewsEnabled:
          enum:
          - "true"
          - "false"
          type: string
      type: object
    privateServiceDetailsPATCH:
      properties:
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetailsPATCH_envSpecificDetails'
        numInstances:
          type: integer
        plan:
          enum:
          - starter
          - starter_plus
          - standard
          - standard_plus
          - pro
          - pro_plus
          type: string
        pullRequestPreviewsEnabled:
          enum:
          - "true"
          - "false"
          type: string
      type: object
    backgroundWorkerDetailsPATCH:
      properties:
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetailsPATCH_envSpecificDetails'
        numInstances:
          type: integer
        plan:
          enum:
          - starter
          - starter_plus
          - standard
          - standard_plus
          - pro
          - pro_plus
          type: string
        pullRequestPreviewsEnabled:
          enum:
          - "true"
          - "false"
          type: string
      type: object
    cronJobDetailsPATCH:
      properties:
        envSpecificDetails:
          $ref: '#/components/schemas/webServiceDetailsPATCH_envSpecificDetails'
        plan:
          enum:
          - starter
          - starter_plus
          - standard
          - standard_plus
          - pro
          - pro_plus
          type: string
        schedule:
          type: string
      type: object
    envVarKeyValue:
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    envVarKeyGenerateValue:
      properties:
        key:
          type: string
        generateValue:
          enum:
          - "true"
          - "false"
          type: string
      required:
      - generateValue
      - key
      type: object
    header:
      example:
        path: path
        name: name
        value: value
      properties:
        path:
          type: string
        name:
          type: string
        value:
          type: string
      required:
      - name
      - path
      - value
      type: object
    owner:
      example:
        name: name
        id: id
        type: user
        email: email
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        type:
          enum:
          - user
          - team
          type: string
      required:
      - id
      type: object
    route:
      example:
        destination: destination
        source: source
        type: redirect
      properties:
        type:
          enum:
          - redirect
          - rewrite
          type: string
        source:
          type: string
        destination:
          type: string
      required:
      - destination
      - source
      - type
      type: object
    serviceType:
      enum:
      - static_site
      - web_service
      - private_service
      - background_worker
      - cron_job
      type: string
    serviceEnv:
      enum:
      - docker
      - elixir
      - go
      - node
      - python
      - ruby
      - rust
      type: string
    region:
      enum:
      - oregon
      - frankfurt
      type: string
    notifySetting:
      enum:
      - default
      - notify
      - ignore
      type: string
    suspenderType:
      enum:
      - admin
      - billing
      - user
      - parent_service
      - unknown
      type: string
    deploy:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        commit:
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: id
          message: message
        id: id
        status: created
        finishedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        commit:
          $ref: '#/components/schemas/deploy_commit'
        status:
          enum:
          - created
          - build_in_progress
          - update_in_progress
          - live
          - deactivated
          - build_failed
          - update_failed
          - canceled
          type: string
        finishedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - id
      type: object
    envVar:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    customDomain:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        server:
          name: name
          id: id
        redirectForName: redirectForName
        domainType: apex
        verificationStatus: verified
        name: name
        id: id
        publicSuffix: publicSuffix
      properties:
        id:
          type: string
        name:
          type: string
        domainType:
          enum:
          - apex
          - subdomain
          type: string
        publicSuffix:
          type: string
        redirectForName:
          type: string
        verificationStatus:
          enum:
          - verified
          - unverified
          type: string
        createdAt:
          format: date-time
          type: string
        server:
          $ref: '#/components/schemas/staticSiteDetails_parentServer'
      type: object
    job:
      example:
        createdAt: 2021-07-15T07:20:05.777035-07:00
        startedAt: 2021-07-15T07:20:05.777035-07:00
        planId: plan-srv-004
        id: job-xxxxx
        startCommand: echo 'hello world'
        serviceId: srv-xxxxx
        status: succeeded
        finishedAt: 2021-07-15T07:20:05.777035-07:00
      properties:
        id:
          example: job-xxxxx
          type: string
        serviceId:
          example: srv-xxxxx
          type: string
        startCommand:
          example: echo 'hello world'
          type: string
        planId:
          example: plan-srv-004
          type: string
        status:
          example: succeeded
          type: string
        createdAt:
          example: 2021-07-15T07:20:05.777035-07:00
          type: string
        startedAt:
          example: 2021-07-15T07:20:05.777035-07:00
          type: string
        finishedAt:
          example: 2021-07-15T07:20:05.777035-07:00
          type: string
      type: object
    serverPort:
      properties:
        port:
          example: 10000
          type: integer
        protocol:
          enum:
          - TCP
          - UDP
          type: string
      type: object
    error:
      properties:
        id:
          type: string
        message:
          type: string
      type: object
    maybeDeploy:
      properties:
        triggeringDeploy:
          enum:
          - "true"
          - "false"
          type: string
      type: object
    get_owners_200_response_inner:
      example:
        owner:
          name: name
          id: id
          type: user
          email: email
        cursor: cursor
      properties:
        owner:
          $ref: '#/components/schemas/owner'
        cursor:
          format: byte
          type: string
    get_services_200_response_inner:
      example:
        cursor: cursor
        service:
          repo: https://github.com/render-examples/flask-hello-world
          ownerId: ownerId
          type: null
          branch: branch
          suspended: suspended
          createdAt: 2000-01-23T04:56:07.000+00:00
          autoDeploy: "true"
          suspenders:
          - null
          - null
          name: name
          notifyOnFail: null
          serviceDetails: null
          id: id
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        service:
          $ref: '#/components/schemas/service'
        cursor:
          format: byte
          type: string
      type: object
    create_service_201_response:
      example:
        service:
          repo: https://github.com/render-examples/flask-hello-world
          ownerId: ownerId
          type: null
          branch: branch
          suspended: suspended
          createdAt: 2000-01-23T04:56:07.000+00:00
          autoDeploy: "true"
          suspenders:
          - null
          - null
          name: name
          notifyOnFail: null
          serviceDetails: null
          id: id
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
        deployId: deployId
      properties:
        service:
          $ref: '#/components/schemas/service'
        deployId:
          type: string
      type: object
    get_deploys_200_response_inner:
      example:
        cursor: cursor
        deploy:
          createdAt: 2000-01-23T04:56:07.000+00:00
          commit:
            createdAt: 2000-01-23T04:56:07.000+00:00
            id: id
            message: message
          id: id
          status: created
          finishedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        deploy:
          $ref: '#/components/schemas/deploy'
        cursor:
          format: byte
          type: string
      type: object
    create_deploy_request:
      properties:
        clearCache:
          default: do_not_clear
          description: Defaults to "do_not_clear"
          enum:
          - clear
          - do_not_clear
          type: string
      type: object
    get_env_vars_for_service_200_response_inner:
      example:
        cursor: cursor
        envVar:
          value: value
          key: key
      properties:
        envVar:
          $ref: '#/components/schemas/envVar'
        cursor:
          format: byte
          type: string
      type: object
    update_env_vars_for_service_request_inner:
      oneOf:
      - $ref: '#/components/schemas/envVarKeyValue'
      - $ref: '#/components/schemas/envVarKeyGenerateValue'
    get_headers_200_response_inner:
      example:
        cursor: cursor
        headers:
          path: path
          name: name
          value: value
      properties:
        headers:
          $ref: '#/components/schemas/header'
        cursor:
          format: byte
          type: string
      type: object
    get_routes_200_response_inner:
      example:
        cursor: cursor
        routes:
          destination: destination
          source: source
          type: redirect
      properties:
        routes:
          $ref: '#/components/schemas/route'
        cursor:
          format: byte
          type: string
      type: object
    get_custom_domains_200_response_inner:
      example:
        cursor: cursor
        customDomain:
          createdAt: 2000-01-23T04:56:07.000+00:00
          server:
            name: name
            id: id
          redirectForName: redirectForName
          domainType: apex
          verificationStatus: verified
          name: name
          id: id
          publicSuffix: publicSuffix
      properties:
        customDomain:
          $ref: '#/components/schemas/customDomain'
        cursor:
          format: byte
          type: string
      type: object
    create_custom_domain_request:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    scale_service_request:
      properties:
        numInstances:
          example: 3
          type: integer
      required:
      - numInstances
      type: object
    list_job_200_response_inner:
      example:
        cursor: !!binary |-
          YWJjMTIz
        job:
          createdAt: 2021-07-15T07:20:05.777035-07:00
          startedAt: 2021-07-15T07:20:05.777035-07:00
          planId: plan-srv-004
          id: job-xxxxx
          startCommand: echo 'hello world'
          serviceId: srv-xxxxx
          status: succeeded
          finishedAt: 2021-07-15T07:20:05.777035-07:00
      properties:
        job:
          $ref: '#/components/schemas/job'
        cursor:
          example: !!binary |-
            YWJjMTIz
          format: byte
          type: string
      type: object
    post_job_request:
      properties:
        startCommand:
          type: string
        planId:
          type: string
      required:
      - startCommand
      type: object
    service_serviceDetails:
      oneOf:
      - $ref: '#/components/schemas/staticSiteDetails'
      - $ref: '#/components/schemas/webServiceDetails'
      - $ref: '#/components/schemas/privateServiceDetails'
      - $ref: '#/components/schemas/backgroundWorkerDetails'
      - $ref: '#/components/schemas/cronJobDetails'
    staticSiteDetails_parentServer:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    webServiceDetails_envSpecificDetails:
      oneOf:
      - $ref: '#/components/schemas/dockerDetails'
      - $ref: '#/components/schemas/nativeEnvironmentDetails'
    servicePOST_secretFiles_inner:
      properties:
        name:
          type: string
        contents:
          type: string
      required:
      - contents
      - name
      type: object
    servicePOST_serviceDetails:
      oneOf:
      - $ref: '#/components/schemas/staticSiteDetailsPOST'
      - $ref: '#/components/schemas/webServiceDetailsPOST'
      - $ref: '#/components/schemas/privateServiceDetailsPOST'
      - $ref: '#/components/schemas/backgroundWorkerDetailsPOST'
      - $ref: '#/components/schemas/cronJobDetailsPOST'
    webServiceDetailsPOST_disk:
      properties:
        name:
          type: string
        mountPath:
          type: string
        sizeGB:
          default: 1
          description: Defaults to 1
          minimum: 1
          type: integer
      required:
      - mountPath
      - name
      type: object
    webServiceDetailsPOST_envSpecificDetails:
      oneOf:
      - $ref: '#/components/schemas/dockerDetailsPOST'
      - $ref: '#/components/schemas/nativeEnvironmentDetailsPOST'
    servicePATCH_serviceDetails:
      oneOf:
      - $ref: '#/components/schemas/staticSiteDetailsPATCH'
      - $ref: '#/components/schemas/webServiceDetailsPATCH'
      - $ref: '#/components/schemas/privateServiceDetailsPATCH'
      - $ref: '#/components/schemas/backgroundWorkerDetailsPATCH'
      - $ref: '#/components/schemas/cronJobDetailsPATCH'
    webServiceDetailsPATCH_envSpecificDetails:
      oneOf:
      - $ref: '#/components/schemas/dockerDetailsPATCH'
      - $ref: '#/components/schemas/nativeEnvironmentDetailsPATCH'
    deploy_commit:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        message: message
      properties:
        id:
          type: string
        message:
          type: string
        createdAt:
          format: date-time
          type: string
      type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
