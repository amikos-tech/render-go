/*
Render Public API

Manage everything about your Render services

API version: 1.0.0
Contact: support@render.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package render

import (
	"encoding/json"
)

// CronJobDetailsPATCH struct for CronJobDetailsPATCH
type CronJobDetailsPATCH struct {
	EnvSpecificDetails *WebServiceDetailsPATCHEnvSpecificDetails `json:"envSpecificDetails,omitempty"`
	Plan *string `json:"plan,omitempty"`
	Schedule *string `json:"schedule,omitempty"`
}

// NewCronJobDetailsPATCH instantiates a new CronJobDetailsPATCH object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCronJobDetailsPATCH() *CronJobDetailsPATCH {
	this := CronJobDetailsPATCH{}
	return &this
}

// NewCronJobDetailsPATCHWithDefaults instantiates a new CronJobDetailsPATCH object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCronJobDetailsPATCHWithDefaults() *CronJobDetailsPATCH {
	this := CronJobDetailsPATCH{}
	return &this
}

// GetEnvSpecificDetails returns the EnvSpecificDetails field value if set, zero value otherwise.
func (o *CronJobDetailsPATCH) GetEnvSpecificDetails() WebServiceDetailsPATCHEnvSpecificDetails {
	if o == nil || isNil(o.EnvSpecificDetails) {
		var ret WebServiceDetailsPATCHEnvSpecificDetails
		return ret
	}
	return *o.EnvSpecificDetails
}

// GetEnvSpecificDetailsOk returns a tuple with the EnvSpecificDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetailsPATCH) GetEnvSpecificDetailsOk() (*WebServiceDetailsPATCHEnvSpecificDetails, bool) {
	if o == nil || isNil(o.EnvSpecificDetails) {
    return nil, false
	}
	return o.EnvSpecificDetails, true
}

// HasEnvSpecificDetails returns a boolean if a field has been set.
func (o *CronJobDetailsPATCH) HasEnvSpecificDetails() bool {
	if o != nil && !isNil(o.EnvSpecificDetails) {
		return true
	}

	return false
}

// SetEnvSpecificDetails gets a reference to the given WebServiceDetailsPATCHEnvSpecificDetails and assigns it to the EnvSpecificDetails field.
func (o *CronJobDetailsPATCH) SetEnvSpecificDetails(v WebServiceDetailsPATCHEnvSpecificDetails) {
	o.EnvSpecificDetails = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *CronJobDetailsPATCH) GetPlan() string {
	if o == nil || isNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetailsPATCH) GetPlanOk() (*string, bool) {
	if o == nil || isNil(o.Plan) {
    return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *CronJobDetailsPATCH) HasPlan() bool {
	if o != nil && !isNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *CronJobDetailsPATCH) SetPlan(v string) {
	o.Plan = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *CronJobDetailsPATCH) GetSchedule() string {
	if o == nil || isNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronJobDetailsPATCH) GetScheduleOk() (*string, bool) {
	if o == nil || isNil(o.Schedule) {
    return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *CronJobDetailsPATCH) HasSchedule() bool {
	if o != nil && !isNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *CronJobDetailsPATCH) SetSchedule(v string) {
	o.Schedule = &v
}

func (o CronJobDetailsPATCH) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EnvSpecificDetails) {
		toSerialize["envSpecificDetails"] = o.EnvSpecificDetails
	}
	if !isNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !isNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	return json.Marshal(toSerialize)
}

type NullableCronJobDetailsPATCH struct {
	value *CronJobDetailsPATCH
	isSet bool
}

func (v NullableCronJobDetailsPATCH) Get() *CronJobDetailsPATCH {
	return v.value
}

func (v *NullableCronJobDetailsPATCH) Set(val *CronJobDetailsPATCH) {
	v.value = val
	v.isSet = true
}

func (v NullableCronJobDetailsPATCH) IsSet() bool {
	return v.isSet
}

func (v *NullableCronJobDetailsPATCH) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCronJobDetailsPATCH(val *CronJobDetailsPATCH) *NullableCronJobDetailsPATCH {
	return &NullableCronJobDetailsPATCH{value: val, isSet: true}
}

func (v NullableCronJobDetailsPATCH) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCronJobDetailsPATCH) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


