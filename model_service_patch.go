/*
Render Public API

Manage everything about your Render services

API version: 1.0.0
Contact: support@render.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package render

import (
	"encoding/json"
)

// checks if the ServicePATCH type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePATCH{}

// ServicePATCH struct for ServicePATCH
type ServicePATCH struct {
	AutoDeploy *string `json:"autoDeploy,omitempty"`
	Branch *string `json:"branch,omitempty"`
	Name *string `json:"name,omitempty"`
	ServiceDetails *ServicePATCHServiceDetails `json:"serviceDetails,omitempty"`
}

// NewServicePATCH instantiates a new ServicePATCH object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePATCH() *ServicePATCH {
	this := ServicePATCH{}
	return &this
}

// NewServicePATCHWithDefaults instantiates a new ServicePATCH object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePATCHWithDefaults() *ServicePATCH {
	this := ServicePATCH{}
	return &this
}

// GetAutoDeploy returns the AutoDeploy field value if set, zero value otherwise.
func (o *ServicePATCH) GetAutoDeploy() string {
	if o == nil || isNil(o.AutoDeploy) {
		var ret string
		return ret
	}
	return *o.AutoDeploy
}

// GetAutoDeployOk returns a tuple with the AutoDeploy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePATCH) GetAutoDeployOk() (*string, bool) {
	if o == nil || isNil(o.AutoDeploy) {
		return nil, false
	}
	return o.AutoDeploy, true
}

// HasAutoDeploy returns a boolean if a field has been set.
func (o *ServicePATCH) HasAutoDeploy() bool {
	if o != nil && !isNil(o.AutoDeploy) {
		return true
	}

	return false
}

// SetAutoDeploy gets a reference to the given string and assigns it to the AutoDeploy field.
func (o *ServicePATCH) SetAutoDeploy(v string) {
	o.AutoDeploy = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *ServicePATCH) GetBranch() string {
	if o == nil || isNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePATCH) GetBranchOk() (*string, bool) {
	if o == nil || isNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *ServicePATCH) HasBranch() bool {
	if o != nil && !isNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *ServicePATCH) SetBranch(v string) {
	o.Branch = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServicePATCH) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePATCH) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServicePATCH) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServicePATCH) SetName(v string) {
	o.Name = &v
}

// GetServiceDetails returns the ServiceDetails field value if set, zero value otherwise.
func (o *ServicePATCH) GetServiceDetails() ServicePATCHServiceDetails {
	if o == nil || isNil(o.ServiceDetails) {
		var ret ServicePATCHServiceDetails
		return ret
	}
	return *o.ServiceDetails
}

// GetServiceDetailsOk returns a tuple with the ServiceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePATCH) GetServiceDetailsOk() (*ServicePATCHServiceDetails, bool) {
	if o == nil || isNil(o.ServiceDetails) {
		return nil, false
	}
	return o.ServiceDetails, true
}

// HasServiceDetails returns a boolean if a field has been set.
func (o *ServicePATCH) HasServiceDetails() bool {
	if o != nil && !isNil(o.ServiceDetails) {
		return true
	}

	return false
}

// SetServiceDetails gets a reference to the given ServicePATCHServiceDetails and assigns it to the ServiceDetails field.
func (o *ServicePATCH) SetServiceDetails(v ServicePATCHServiceDetails) {
	o.ServiceDetails = &v
}

func (o ServicePATCH) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePATCH) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AutoDeploy) {
		toSerialize["autoDeploy"] = o.AutoDeploy
	}
	if !isNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.ServiceDetails) {
		toSerialize["serviceDetails"] = o.ServiceDetails
	}
	return toSerialize, nil
}

type NullableServicePATCH struct {
	value *ServicePATCH
	isSet bool
}

func (v NullableServicePATCH) Get() *ServicePATCH {
	return v.value
}

func (v *NullableServicePATCH) Set(val *ServicePATCH) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePATCH) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePATCH) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePATCH(val *ServicePATCH) *NullableServicePATCH {
	return &NullableServicePATCH{value: val, isSet: true}
}

func (v NullableServicePATCH) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePATCH) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


